// Code generated by goctl. DO NOT EDIT.
// Source: applet.proto

package server

import (
	"context"

	"go-zero-admin/application/applet/rpc/internal/logic/authority"
	"go-zero-admin/application/applet/rpc/internal/svc"
	"go-zero-admin/application/applet/rpc/pb"
)

type AuthorityServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedAuthorityServer
}

func NewAuthorityServer(svcCtx *svc.ServiceContext) *AuthorityServer {
	return &AuthorityServer{
		svcCtx: svcCtx,
	}
}

// 获取角色列表
func (s *AuthorityServer) GetAuthorityList(ctx context.Context, in *pb.GetAuthorityListRequest) (*pb.GetAuthorityListResponse, error) {
	l := authoritylogic.NewGetAuthorityListLogic(ctx, s.svcCtx)
	return l.GetAuthorityList(in)
}

// 增加base_menu和角色关联关系 -- 用于角色管理的设置权限
func (s *AuthorityServer) AddAuthorityMenu(ctx context.Context, in *pb.AddAuthorityMenuRequest) (*pb.AddAuthorityMenuResponse, error) {
	l := authoritylogic.NewAddAuthorityMenuLogic(ctx, s.svcCtx)
	return l.AddAuthorityMenu(in)
}

// 更新角色 -- 设为首页
func (s *AuthorityServer) UpdateAuthority(ctx context.Context, in *pb.UpdateAuthorityRequest) (*pb.UpdateAuthorityResponse, error) {
	l := authoritylogic.NewUpdateAuthorityLogic(ctx, s.svcCtx)
	return l.UpdateAuthority(in)
}

// 创建角色
func (s *AuthorityServer) CreateAuthority(ctx context.Context, in *pb.CreateAuthorityRequest) (*pb.CreateAuthorityResponse, error) {
	l := authoritylogic.NewCreateAuthorityLogic(ctx, s.svcCtx)
	return l.CreateAuthority(in)
}
